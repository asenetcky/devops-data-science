---
title: "Model"
format:
  html:
    code-fold: true
---

## Get Data

```{r}
library(vetiver)
library(duckdb)
library(palmerpenguins)
library(dplyr)
library(pins)
library(fs)
library(plumber)
```

```{r original-df}
#| eval: false
#| include: false


df <- 
 penguins |> 
  filter(
    if_all(everything(), \(x) !is.na(x))
  )
  
```

```{r db-df}
con <- DBI::dbConnect(
  duckdb::duckdb(), 
  dbdir = "my-db.duckdb"
  )

df <- 
  dplyr::tbl(con, "penguins") |> 
  filter(
    if_all(everything(), \(x) !is.na(x))
  )

```


## Define Model and Fit

```{r}
model <- lm( body_mass_g ~ bill_length_mm + species + sex, df)
summary(model)
```
```{r}

prototype <- 
  df |> 
  select(bill_length_mm, species, sex) |> 
  head(1) |> 
  collect()
  
v_model <- vetiver_model(
  model, 
  model_name = "penguin_model", 
  save_prototype = prototype
)
```



## Save model

```{r}
model_board <- 
  board_folder(
    path = "~/data/models/",
    versioned = TRUE 
  )

vetiver_pin_write(
  vetiver_model = v_model,
  board = model_board,
  check_renv = TRUE
)
```

## Serve model from pin

```{r}
pin_board <- board_folder("~/data/models/")

v_model_from_pin <- vetiver_pin_read(
  board = pin_board,
  name = "penguin_model"
)

```


## db setup

```{r}
#| eval: false
#| include: false

con <- DBI::dbConnect(duckdb::duckdb(), dbdir = "my-db.duckdb")
DBI::dbWriteTable(con, "penguins", palmerpenguins::penguins)
DBI::dbDisconnect(con)

```




## deploy the model

```{r}
pr() |> 
  vetiver_api(v_model_from_pin) |> 
  pr_run(port = 8080)
```
## model endpoint

```{r}
endpoint <- vetiver_endpoint("http://127.0.0.1:8080/predict")
endpoint

```

## predictions

```{r}
new_penguins <- 
  df |> 
  slice_sample(n = 20) |> 
  select(bill_length_mm, species, sex)

predict(endpoint, new_penguins)

```


